
import { GoogleGenAI } from "@google/genai";

const API_KEY = process.env.API_KEY;

if (!API_KEY) {
  throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });

export async function generateOldTimeyImage(userPrompt: string): Promise<string> {
  // Enhance the user prompt with keywords to guide the AI towards a vintage aesthetic.
  const fullPrompt = `
    Vintage photograph, old timey aesthetic, sepia tones or grainy black and white, 
    1920s style, film grain, classic photo, nostalgic. 
    A photograph of: ${userPrompt}.
  `;

  try {
    const response = await ai.models.generateImages({
        model: 'imagen-3.0-generate-002',
        prompt: fullPrompt,
        config: { numberOfImages: 1, outputMimeType: 'image/jpeg' },
    });

    if (response.generatedImages && response.generatedImages.length > 0) {
      const base64ImageBytes: string = response.generatedImages[0].image.imageBytes;
      return `data:image/jpeg;base64,${base64ImageBytes}`;
    } else {
      throw new Error("No images were generated by the API.");
    }
  } catch (error) {
    console.error("Error calling Gemini API:", error);
    // Re-throw a more user-friendly error or a generic one
    throw new Error("Failed to communicate with the image generation service.");
  }
}
